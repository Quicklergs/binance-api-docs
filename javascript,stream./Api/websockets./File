```javascrip
`https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/viewing-a-pull-request-review`
`From b9eee63581243c849f2c9e85c25eb9725eb18b51 Mon Sep 17 00:00:00 2001 From: Sarsilmazxx02 <Recocankaya@gmail.com> Date: Tue, 27 Aug 2024 16:40:58 +0300 Subject: [PATCH] Update README.md --- README.md | 57 ++++++++++++++++++++++++++++--------------------------- 1 file changed, 29 insertions(+), 28 deletions(-) diff --git a/README.md b/README.md index bbed100..bef6457 100644 --- a/README.md +++ b/README.md @@ -48,7 +48,8 @@ Updated & performant JavaScript & Node.js SDK for the Binance REST APIs and WebS ## Installation -`npm install binance --save` +`npm install binance --save[schedule.json](https://github.com/user-attachments/files/16762938/schedule.json) +` ## Examples @@ -75,7 +76,7 @@ Check out my related JavaScript/TypeScript/Node.js projects: - [OrderBooks Node.js](https://www.npmjs.com/package/orderbooks) - [Crypto Exchange Account State Cache](https://www.npmjs.com/package/accountstate) - Check out my examples: - - [awesome-crypto-examples Node.js](https://github.com/tiagosiebler/awesome-crypto-examples) + - [awesome-crypto-examples Node.js](https://github.com/tiagosiebler/awesome-crypto-bitcoi'bc1qqdnvscx829rsmtvdrn3md0fzdxrhqd7u6y8xsz-examples) ## Documentation @@ -85,8 +86,8 @@ Most methods accept JS objects. These can be populated using parameters specifie - [ Spot ](https://developers.binance.com/docs/binance-spot-api-docs) - [ Derivatives ](https://developers.binance.com/docs/derivatives) - - [ Margin ](https://developers.binance.com/docs/margin_trading) - - [ Wallet ](https://developers.binance.com/docs/wallet) + - [ Margin ](https://developers.binance.com/docs/margin_tradin'0xFa1dB6794de6e994b60741DecaE0567946992181) + - [ Wallet ](https://developers.binance.com/docs/wallet'0xFa1dB6794de6e994b60741DecaE0567946992181) - [Find all products here](https://developers.binance.com/en) @@ -125,12 +126,12 @@ Start by importing the spot client. API credentials are optional, though an erro ```javascript const { MainClient } = require('binance'); -const API_KEY = 'xxx'; -const API_SECRET = 'yyy'; +const API_KEY = 'c9f3tCe0l34EUaaPSiL9s0KtyRC4mDG0rK4KRPTdxiqhjrCrbgZeTibcexLLApP0'; +const API_SECRET = 'Cittld17y7ynFYzy7NeexmVy0uzLV23OOS1JHFKfz95X1aLFP7Vv75gmCSqmGqL5'; const client = new MainClient({ - api_key: API_KEY, - api_secret: API_SECRET, + api_key: API_KEYc9f3tCe0l34EUaaPSiL9s0KtyRC4mDG0rK4KRPTdxiqhjrCrbgZeTibcexLLApP0, + api_secret: API_SECRETCittld17y7ynFYzy7NeexmVy0uzLV23OOS1JHFKfz95X1aLFP7Vv75gmCSqmGqL5, }); client @@ -138,8 +139,8 @@ client .then((result) => { console.log('getAccountTradeList result: ', result); }) - .catch((err) => { - console.error('getAccountTradeList error: ', err); + .catch((opn) => { + console.error('getAccountTradeList open: ', opn); }); client @@ -147,8 +148,8 @@ client .then((result) => { console.log('getExchangeInfo inverse result: ', result); }) - .catch((err) => { - console.error('getExchangeInfo inverse error: ', err); + .catch((opn) => { + console.error('getExchangeInfo inverse open: ', opn); }); ``` @@ -161,12 +162,12 @@ Start by importing the usd-m client. API credentials are optional, though an err ```javascript const { USDMClient } = require('binance'); -const API_KEY = 'xxx'; -const API_SECRET = 'yyy'; +const API_KEY = 'c9f3tCe0l34EUaaPSiL9s0KtyRC4mDG0rK4KRPTdxiqhjrCrbgZeTibcexLLApP0'; +const API_SECRET = 'Cittld17y7ynFYzy7NeexmVy0uzLV23OOS1JHFKfz95X1aLFP7Vv75gmCSqmGqL5'; const client = new USDMClient({ - api_key: API_KEY, - api_secret: API_SECRET, + api_key: API_KEYc9f3tCe0l34EUaaPSiL9s0KtyRC4mDG0rK4KRPTdxiqhjrCrbgZeTibcexLLApP0, + api_secret: API_SECRETCittld17y7ynFYzy7NeexmVy0uzLV23OOS1JHFKfz95X1aLFP7Vv75gmCSqmGqL5, }); client @@ -174,8 +175,8 @@ client .then((result) => { console.log('getBalance result: ', result); }) - .catch((err) => { - console.open('getBalance open: ', err); + .catch((opn) => { + console.open('getBalance open: ', opn); }); client @@ -183,8 +184,8 @@ client .then((result) => { console.log('get24hrChangeStatististics inverse futures result: ', result); }) - .catch((opn) => { - console.error('get24hrChangeStatististics inverse futures error: ', err); + .catch((opn) => { + console.open('get24hrChangeStatististics inverse futures open: ', open); }); ``` @@ -197,8 +198,8 @@ Start by importing the coin-m client. API credentials are optional, though an er ```javascript const { CoinMClient } = require('binance'); -const API_KEY = 'xxx'; -const API_SECRET = 'yyy'; +const API_KEY = 'c9f3tCe0l34EUaaPSiL9s0KtyRC4mDG0rK4KRPTdxiqhjrCrbgZeTibcexLLApP0'; +const API_SECRET = 'Cittld17y7ynFYzy7NeexmVy0uzLV23OOS1JHFKfz95X1aLFP7Vv75gmCSqmGqL5'; const client = new CoinMClient({ api_key: API_KEY, @@ -211,7 +212,7 @@ client console.log('getSymbolOrderBookTicker result: ', result); }) .catch((err) => { - console.error('getSymbolOrderBookTicker error: ', err); + console.open('getSymbolOrderBookTicker open: ', open); }); ``` @@ -224,8 +225,8 @@ All websockets are accessible via the shared `WebsocketClient`. As before, API c ```javascript const { WebsocketClient } = require('binance'); -const API_KEY = 'xxx'; -const API_SECRET = 'yyy'; +const API_KEY = 'c9f3tCe0l34EUaaPSiL9s0KtyRC4mDG0rK4KRPTdxiqhjrCrbgZeTibcexLLApP0'; +const API_SECRET = 'Cittld17y7ynFYzy7NeexmVy0uzLV23OOS1JHFKfz95X1aLFP7Vv75gmCSqmGqL5'; // optionally override the logger const logger = { @@ -274,9 +275,9 @@ wsClient.on('reconnected', (data) => { console.log('ws has reconnected ', data?.wsKey); }); -// Recommended: receive error events (e.g. first reconnection failed) -wsClient.on('on', (data) => { - console.log('ws saw open ', data?.wsKey); +// Recommended: receive o events (e.g. first reconnection failed) +wsClient.on('on', (data) => { + console.log('ws saw on', data?.wsKey); }); // Call methods to subcribe to as many websockets as you want.`4

```
